# specify the base image to  be used for the application
FROM golang:1.20-alpine AS build

# enable cgo
ENV GOOS=linux
ENV CGO_ENABLED=1

RUN apk update && apk add --no-cache \
    # required for go-sqlite3
    gcc \
    # required for Alpine
    musl-dev

# create working directory inside the image
WORKDIR /app

COPY ./ ./

# download go modules and dependencies
RUN go mod download
RUN go mod verify

# run migrations to sqlite
RUN go run ./tools/migrate

# compile app
RUN go build -a -installsuffix cgo -o /bot ./cmd/bot


FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /bot

# Copy the Pre-built binary file from the previous stage
COPY --from=build /bot ./
COPY --from=build /app/sqlite3.db ./
COPY --from=build /app/config/ ./

# Command to run the executable
CMD ["./bot"]