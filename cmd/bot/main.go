package main

import (
	"database/sql"
	"github.com/devrdn/wp-vulnerability-informer/internal/models"
	"github.com/devrdn/wp-vulnerability-informer/internal/parser"
	_ "github.com/joho/godotenv/autoload"
	_ "github.com/mattn/go-sqlite3"
	"log"
	"time"
)

const (
	targetHour   = 00
	targetMinute = 29

	ChannelId = -1001842465106
)

func main() {
	var prs parser.Parser

	// connect to db
	db, err := sql.Open("sqlite3", "sqlite3.db")
	if err != nil {
		log.Fatal(err)
	}

	vulnerabilityModel := models.NewVulnerability(db)

	b, err := NewBot("config/bot/bot.yml")
	if err != nil {
		log.Fatal(err)
	}

	go func() {
		for {
			currentTime := time.Now()

			if currentTime.Hour() == targetHour && currentTime.Minute() == currentTime.Minute() {
				vulnerabilities, err := prs.Parse()
				if err != nil {
					log.Println(err)
					return
				}

				newVulnerabilities, err := processData(vulnerabilities, vulnerabilityModel)
				if err != nil {
					log.Println(err)
					return
				}

				err = SendVulnerability(newVulnerabilities, b)
				if err != nil {
					log.Println(err)
					return
				}
			}

			break
			time.Sleep(time.Minute)
		}
	}()

	b.Start()

}
