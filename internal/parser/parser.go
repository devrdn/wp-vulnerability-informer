package parser

import (
	"encoding/json"
	"net/http"

	"github.com/devrdn/wp-vulnerability-informer/internal/config"
	"github.com/devrdn/wp-vulnerability-informer/internal/models"
	"github.com/gocolly/colly/v2"
)

const (
	totalPages = 575
)

type Parser struct {
	url string
	c   *colly.Collector
}

func New(cfg config.Config) *Parser {
	return &Parser{
		url: cfg.BaseUrl,
		c:   colly.NewCollector(),
	}
}

// The Parse method parses the page with WordPress vulnerabilities
// from public database and return array of vulnerabilities
func (p *Parser) Parse() (map[string]*models.Vulnerability, error) {
	m := make(map[string]*models.Vulnerability, 20*totalPages)

	resp, err := http.Get(p.url)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	err = json.NewDecoder(resp.Body).Decode(&m)
	if err != nil {
		return nil, err
	}

	return m, nil
}
