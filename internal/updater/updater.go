package updater

import (
	"github.com/devrdn/wp-vulnerability-informer/internal/bot"
	"github.com/devrdn/wp-vulnerability-informer/internal/models"
	"github.com/devrdn/wp-vulnerability-informer/internal/parser"
	"github.com/devrdn/wp-vulnerability-informer/internal/storage"
)

type Updater struct {
	storage storage.Storage
	parser  *parser.Parser
	bot     *bot.Bot
}

func New(bot *bot.Bot, storage storage.Storage, parser *parser.Parser) *Updater {
	return &Updater{
		bot:     bot,
		storage: storage,
		parser:  parser,
	}
}

// The Update method updates information about WordPress vulnerabilities
// and sends it to the Telegram bot if there are a maximum of 10 new records.
func (u *Updater) Update() error {
	// Get old vulnerabilities
	oldVulnerabilities, err := u.storage.Get()
	if err != nil {
		return err
	}

	// Get New Vulnerabilities
	newVulnerabilities, err := u.parser.Parse()
	if err != nil {
		return err
	}

	// Vulnerabilities comparison
	diff := make(map[string]*models.Vulnerability, 10)
	for key, v := range newVulnerabilities {
		if _, ok := oldVulnerabilities[key]; !ok {
			diff[key] = v
		}
	}

	// Save new vulnerabilities to storage
	err = u.storage.Save(newVulnerabilities)
	if err != nil {
		return err
	}

	// If there are fewer than 10 records, then send them to the bot.
	// TODO: implement a worker to send messages.
	if len(diff) < 10 {
		for _, d := range diff {
			u.bot.SendToChannel(*d)
		}
	}

	return nil
}
