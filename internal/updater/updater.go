package updater

import (
	"errors"
	"github.com/devrdn/wp-vulnerability-informer/internal/bot"
	"github.com/devrdn/wp-vulnerability-informer/internal/models"
	"github.com/devrdn/wp-vulnerability-informer/internal/parser"
	"github.com/devrdn/wp-vulnerability-informer/internal/storage"
)

type Updater struct {
	sendToBot bool
	storage   storage.Storage
	parser    *parser.Parser
	bot       *bot.Bot
}

func New(bot *bot.Bot, storage storage.Storage, parser *parser.Parser) *Updater {
	return &Updater{
		bot:     bot,
		storage: storage,
		parser:  parser,
	}
}

// The Update method updates information about WordPress vulnerabilities
// and sends it to the Telegram bot if there are a maximum of 10 new records.
func (u *Updater) Update() error {
	// Get New Vulnerabilities
	vulnerabilities, err := u.parser.Parse()
	if err != nil {
		return err
	}

	newVulnerabilities := make([]*models.Vulnerability, 0, 10)
	for _, v := range vulnerabilities {
		err := u.storage.Save(v)
		if err != nil {
			if errors.Is(err, storage.ErrRecordAlreadyExist) {
				continue
			}
			return err
		}
		newVulnerabilities = append(newVulnerabilities, v)
	}

	if len(newVulnerabilities) < 10 {
		for _, d := range newVulnerabilities {
			u.bot.SendToChannel(*d)
		}
	}

	return nil
}
