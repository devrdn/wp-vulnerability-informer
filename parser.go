package parser

import (
	"github.com/gocolly/colly/v2"
	"log"
	"strconv"
	"time"
)

type Parser struct {
	url string
	c   *colly.Collector
}

func NewParser(url string, c *colly.Collector) *Parser {
	return &Parser{
		url: url,
		c:   c,
	}
}

func (p *Parser) Parse() ([]*Vulnerability, error) {

	var vulnerabilities []*Vulnerability

	// parse html page
	p.c.OnHTML(".threat-intel-vulns-table tbody tr", func(h *colly.HTMLElement) {
		vulnerability := &Vulnerability{}
		vulnerability.Name = h.ChildText("td:first-child")

		severity, err := strconv.ParseFloat(h.ChildText(".cvss-badge-column"), 32)
		if err != nil {
			log.Fatal("err1")
			return
		}

		vulnerability.Severity = float32(severity)

		date, err := time.Parse("January 2, 2006", h.ChildText(".date-column"))
		if err != nil {
			log.Fatal(err)
			return
		}

		vulnerability.Date = date

		vulnerabilities = append(vulnerabilities, vulnerability)
	})

	err := p.c.Visit(p.url)
	if err != nil {
		return nil, err
	}

	p.c.Wait()

	return vulnerabilities, nil
}
